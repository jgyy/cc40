Resources:
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyAPI

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambda
      Runtime: nodejs14.x
      Handler: index.handler
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            // Lambda code
          };

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-bucket

  ElastiCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      ClusterName: MyCluster
      Engine: redis
      NumCacheNodes: 1
      CacheNodeType: cache.t2.micro

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: myresource

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Lambda.Arn}/invocations

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Lambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
